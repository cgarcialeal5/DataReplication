---
title: "Data Replication Project"
author: "Cristina Garcia Leal"
output:
  html:
    code-block-bg: "#f5f5f5"
    code-block-border-left: "#cccccc"
toc: TRUE
toc_depth: 3
---

# Citation:

Ashley E. Sharpe, Juan Manuel Palomo, Takeshi Inomata, Daniela Triadan, Flory Pinz√≥n, Jason Curtis, Kitty Emery, George Kamenov, John Krigbaum, Jessica MacLellan, Mar√≠a Paula Weihm√ºller, *An isotopic examination of Maya Preclassic and Classic animal and human diets at Ceibal, Guatemala,* Journal of Archaeological Science: Reports, Volume 55, 2024, 104522, ISSN 2352-409X, [https://doi.org/10.1016/j.jasrep.2024.104522](https://doi.org/10.1016/j.jasrep.2024.104522.){.uri}

# The Original Study:

This article attempts to answer a question that has plagued Maya archaeologists ever since they first understood the magnitude of these ancient civilizations: How did the Maya sustain their cities through time and fluctuations in the population? The authors emphasize that there was no "universal" Maya diet, and as such, there was a lot of variation in dietary patterns across sites and across time. Thus, they argue, Ceibal is an ideal site to examine diet and subsistence through time because it had a long occupation that spanned from 1100 BC to 1200 CE. Ceibal was a significant political and ceremonial Maya center that experienced significant changes during its long occupation, including periods of abandonment and reoccupation.

## Methods:

To examine this, the authors aimed to understand the relationship between animals and humans, hoping to trace shifts in diet and animal management. Their methods involved using isotope analysis to get information about the samples. The study measured carbon, oxygen, and strontium isotope in dental enamel. Carbon (ùõÖC^13^) was used to trace maize consumption by determining the proportion of C4 plants in the diet, oxygen (ùõÖO^18^) was used to trace drinking water sources and estimate mobility, and strontium (Sr^87^/Sr^86^) was used to trace geographic origins based on regional geology. All three isotopes were measured for faunal samples, however only carbon isotopes were measured for the human samples.

The measured isotope values for animals and humans were then analyzed statistically. The authors present descriptive statistics of the dog and deer isotope values for carbon, oxygen and strontium organized by chronological order. The distribution of values for each isotope was also analyzed statistically for each animal. Student's t-tests were employed on the carbon values for dogs and humans for each time period to compare the difference in diets over time.

## Data Used:

The fauna data contained 63 samples from non-human mammals excavated in Ceibal. The samples were excavated from different archaeological contexts and represented various different time periods, from the Early Middle Preclassic (1000-700 BCE) all the way to the Terminal Classic (810-950 CE). These samples came from various different types of teeth (molars, premolars, canines, and incisors). These faunal samples came from the following animals:

1.  Domestic dog (*Canis lupus familiaris*): 45 samples
2.  White-tailed deer (*Odocoileus virginianus*): 7 samples
3.  Peccary (*Tayassuidae cf. Dicotyles tajacu*): 2 samples
4.  Baird‚Äôs tapir (*Tapirella bairdii*): 3 samples
5.  Large feline (possibly *Panthera onca*): 2 samples
6.  Margay (*Leopardus wiedii*): 1 sample
7.  Agouti (*Dasyprocta punctata*): 1 sample
8.  Paca (*Cuniculus paca*): 1 sample
9.  Opossum (*Philander opossum*): 1 sample

The human data contained 21 samples from third molars and also represented individuals from different time periods. However, this sample only ranged from the Early Middle Preclassic to the Late Classic, there are no individuals from the Terminal Classic.

## Results:

The strontium measurements in the faunal sample suggest that dogs were the most mobile species and indicate that a large portion of the dogs came from regions south and west of Ceibal. The authors highlight one specific dog, whose strontium values match the volcanic highlands, which supports evidence that dogs were transported over long distances. Furthermore, oxygen values for dogs match Ceibal's water sources, pointing to domestication. On the other hand, strontium and oxygen values for deer are both consistent with local and regional sources. Interestingly, the strontium values of the peccary and agouti also suggest non-local origins, which could be the result of either hunting zones or trade networks.

The carbon isotope results were also quite interesting. Dogs generally had higher values for carbon isotopes than humans, which indicates that dogs were eating more maize than humans were. Carbon results for deer were as expected, low values of ùõÖC^13^ are consistent with a diet based on forest plants (C3 plants). Contrary to this, one large feline had higher ùõÖC^13^ values than expected. Considering that these animals are carnivores, the elevated carbon values are evidence of higher maize consumption and could indicate that this animal was in captivity. The moderate values for the peccary and agouti imply that these animals consumed at least some maize. Lastly, carbon values for the human sample showed a clear increase of maize consumption through time, especially during the transition between the Preclassic and Classic periods.

## Conclusions:

When these results were compared across time periods and compared to human consumption of maize (as evidenced by the carbon values of the human sample), several conclusions can be reached. First of all, the strontium and oxygen values indicate that deer were local and their carbon values do not point towards domestication. Thus, the authors conclude that they were probably locally hunted.

Carbon values for dogs suggest that they were fed maize from the Preclassic period and their dependence on maize increased heavily towards the Late Preclassic Period. However, variability during the Late Preclassic Period suggests that there were various methods of providing feed to domesticated dogs. During this period human consumption of maize is variable. The authors argue that during this time, dogs were being consumed as meat sources.

The variability decreases during the Classic Period, as uniform high values among all dogs indicate full dependence on maize. The same trend is observed in humans as they become more dependent on maize as well. The authors suggest that this is because dogs were no longer consumed as food, but kept as companions.

# The Reproduction:

For this project, I will be replicating three different types of analysis. First, I will recreate the visualization depicted in Figure 3 of the article, which shows the strontium values on the x-axis and the oxygen values on the y-axis. The figure has different colors representing the different types of animals and different symbols representing the different time periods. Then, I will replicate the descriptive statistics presented in Table 3 of the article. These statistics will be calculated for all three isotope values for dogs and deer divided by time period. Lastly, I will perform Student's t-tests to compare carbon 13 values for dogs and humans across time periods.

However, before starting any of the analysis I will clean up the original data from the supplementary information. The original data was stored in an excel workbook (.xlxs) with two sheets, there was extra explanatory information, and the column names had spaces and symbols in them. The first sheet contained the data from the fauna sample and the second sheet contained the data from the human sample. As such, I separated the data into two separate excel workbooks with only one sheet, renamed the columns, and saved them as .csv files. The cleanup involved re-naming the columns to remove special characters and spaces so that R can read the data properly. As such, the project repository will have a folder with all the versions of the data, from the original supplementary data to the .csv files used for this analsys.

Once the analysis is completed the repository's main directory will contain the following:

1.  Original PDF File: Sharpe_et_al_2024_IsotopesCeibal.pdf
2.  Data Replication Project: DataReplication.Rproj
3.  Quarto Document: Data-Replication.qmd
4.  Rendered HTML: Data-Replication.html
5.  .gitignore
6.  Data Replication Files: Directory with all the files related to the rendered document
7.  Data: Directory with the data files
    a.  OriginalData.xlsx : The original excel workbook from the supplementary information.
    b.  Table1_Fauna.xlsx: Excel workbook with data from faunal sample.
    c.  Table1_Fauna.csv: Same as above, but saved as a comma separated values file.
    d.  Table2_Human.xlsx: Excel workbook with data from human sample.
    e.  Table2_Human.csv: Same as above, but saved as a comma separated values file.
8.  Images: Directory with the images from the article and the results from the reproductions
    a.  Figure3_SrO_vis.png: Image of the graph from the original article used for the visualization reproduction
    b.  my_desc.html: HTML file of table resulting from the descriptive analysis reproduction
    c.  my_desc.png: Image of the table resulting from the descriptive analysis reproduction
    d.  my_infer.html: HTML file of the table resulting from the inferential analysis reproduction
    e.  my_infer.png: Image of the table resulting from the inferential analysis reproduction
    f.  my_vis.png: Image of the graph resulting from the visualization reproduction
    g.  Table3_DescStats: Image of the table from the original article used for the descriptive analysis reproduction

The original images are labeled by using the reference number from the article (i.e. Figure or Table and number), followed by a short description and/or the analysis they represent. The images from the reproductions are labeled using the prefix "my\_" followed by the a shortened version of the type of analysis it is replicating.

A similar method was used to label data and values in the Quarto document. The first letters of the label describes the group of data that it contained (f = fauna, h = human, dh = dogs and humans). The second part of the label refers to the analysis that is being carried out (infer = inferential statistics, desc = descriptive statistics, vis = visualization). The last part is only a number in order to avoid writing over a data frame. The number allows each portion of the analysis to create a new data frame. The exceptions to that labeling system are the data and values that are used within other codes, in which case the labeling is simply chosen to be descriptive and as short as possible. Lastly, the images embedded into the document were labeled using either "o" or "my" to signify whether the image is the original or the reproduction, followed by the same abbreviation that refers to the type of analysis (infer = inferential statistics, desc = descriptive statistics, vis = visualization).

## Before I Start:

Before any analysis begins, I will prepare RStudio for the analysis by loading the packages needed for all analyses. This section includes the complete list of packages used during the project to aid the process for those replicating this document later and the original process to load the data into the program.

While I will specify when I am using each package and function when they are used, I will also list all the packages here. All files will be read by using the read_csv() function from the `{reader}` package. The package `{dplyr}` will using to pipe any code, as my computer does not like the `{base}` package piping function of `|>`. However, that should work for others replicating the analysis. Visualizations will be done using the `{ggplot2}` package. Lastly, the `{kableExtra}` package will be used to create final tables.

### Packages:

```{r}
#| echo: true
#| eval: true
#| output: false
library(tidyverse)
library(ggplot2)
library(dplyr)
library(patchwork)
library(readr)
library(knitr)
library(kableExtra)
library(webshot2)
library(gridExtra)
library(grid)
```

### Reading and cleaning the data:

#### Fauna Data

This data set will be named "f" to represent fauna data.

```{r}
a <- "C:/Users/cglea/OneDrive/UT-Austin/Repos/DataReplication/Data/Table1_Fauna.csv"
f <- read_csv(a, col_names = TRUE)

head(f)
```

Now, I must also clean the data and rename the data in the column Common Name that show different variations of the same (or similar) animals. For example, there is one data entry that says "Jaguar" and another that is called "Large Feline (Jaguar?). For the sake of these analyses, both will be categorized as "Large Feline." I will also change the names to more closely resemble the ones used throughout the article (for example, "Domestic Dog" is simply shown as "Dog" in the article).

```{r}
f <- f %>%
   mutate(ComName = case_when(
    str_detect(tolower(ComName), "domestic") ~ "Dog",
    str_detect(tolower(ComName), "feline") ~ "Large Feline",
    str_detect(tolower(ComName), "jaguar") ~ "Large Feline",
    str_detect(tolower(ComName), "margay") ~ "Margay",
    str_detect(tolower(ComName), "lowland paca") ~ "Paca",
    str_detect(tolower(ComName), "central american agouti") ~ "Agouti",
    str_detect(tolower(ComName), "gray four-eyed opossum") ~ "Opposum",
    str_detect(tolower(ComName), "white-tailed deer") ~ "Deer",
    str_detect(tolower(ComName), "peccary") ~ "Peccary",
    str_detect(tolower(ComName), "baird's tapir") ~ "Tapir",
    TRUE ~ ComName
  )) 
```

I will also group together the time periods and rename them to match the time period as shown in the article's graphs and tables. This way, for example, all ceramic phases of the Early Classic will be grouped together and renamed as "EC".

```{r}
f <- f %>%
  mutate(TimePeriod = case_when(
    str_detect(tolower(TimePeriod), "early middle preclassic") ~ "EMP",
    str_detect(tolower(TimePeriod), "late middle preclassic") ~ "LMP",
    str_detect(tolower(TimePeriod), "late preclassic") ~ "LP.TP",
    str_detect(tolower(TimePeriod), "terminal preclassic") ~ "LP.TP",
    str_detect(tolower(TimePeriod), "early classic") ~ "EC",
    str_detect(tolower(TimePeriod), "late classic") ~ "LC",
    str_detect(tolower(TimePeriod), "terminal classic") ~ "TC",
    TRUE ~ TimePeriod
  ))
```

The tibble also shows that all columns are stored as character data, so before beginning the analysis, I will also properly categorize all columns either as categorical or as numerical, depending on the information they contain. This step was done by mutating the column to `as.numeric` using the `mutate()` function from the `{dplyr}` package for the columns with numeric data and then also mutating the columns to `as.factor` using the `mutate()` function from the `{dplyr}` package for the columns with categorical data.

```{r}
f <- f %>%
  mutate(SciName = as.factor(SciName)) %>%
  mutate(ComName = as.factor(ComName)) %>%
  mutate(TimePeriod = as.factor(TimePeriod)) %>%
  mutate(Chronology = as.factor(Chronology)) %>%
  mutate(C13 = as.numeric(ifelse(C13 == "n/a", NA, C13))) %>%
  mutate(O18 = as.numeric(ifelse(O18 == "n/a", NA, O18))) %>%
  mutate(Sr87_Sr86 = as.numeric(ifelse(Sr87_Sr86 == "n/a", NA, Sr87_Sr86))) %>%
  mutate(SrError = as.numeric(ifelse(SrError == "n/a", NA, SrError))) %>%
  mutate(SrConcentration = as.numeric(ifelse(SrConcentration == "n/a", NA, SrConcentration)))
```

The resulting table should look like this:

```{r}
#| echo: false
f %>%
  kable() %>%
  kable_styling() %>%
  kableExtra::scroll_box(width = "100%", height = "600px")
```

#### Human Data

This data set will be named "h" to represent human data.

```{r}
b <- "C:/Users/cglea/OneDrive/UT-Austin/Repos/DataReplication/Data/Table2_Human.csv"
h <- read_csv(b, col_names = TRUE)

head(h)
```

I will also modify the categories for time period in order to match the data from the fauna data set.

```{r}
h <- h %>%
    mutate(TimePeriod = case_when(
    str_detect(tolower(TimePeriod), "early middle preclassic") ~ "EMP",
    str_detect(tolower(TimePeriod), "late middle preclassic") ~ "LMP",
    str_detect(tolower(TimePeriod), "late preclassic") ~ "LP.TP",
    str_detect(tolower(TimePeriod), "terminal preclassic") ~ "LP.TP",
    str_detect(tolower(TimePeriod), "early classic") ~ "EC",
    str_detect(tolower(TimePeriod), "late classic") ~ "LC",
    str_detect(tolower(TimePeriod), "terminal classic") ~ "TC",
    TRUE ~ TimePeriod
  ))
```

This data set is significantly simpler than the fauna data set. Therefore, I will only modify the table to convert Time Period to `as.factor` and C13 to `as.numeric`, using the same methods I used on the fauna data set. I will also convert the "plus or minus" sign that appeared in the original excel in order for R to read the data clearly.

```{r}
h <- h %>%
  mutate(TimePeriod = as.factor(TimePeriod)) %>%
  mutate(C13 = as.numeric(ifelse(C13 == "n/a", NA, C13)))
  
h[] <-lapply(h, function(x) if(is.character(x)) iconv(x, from = "latin1", to = "UTF-8") else x)
```

The resulting table should look like this:

```{r}
#| echo: false
h %>%
  kable() %>%
  kable_styling() %>%
  kableExtra::scroll_box(width = "100%", height = "600px")
```

## Analysis One: Visualization

The analysis that is being replicated here is the visualization shown in Figure 3 of the article. This image is found on page 5 of the .pdf document.

To start, this is the original image:

```{r, out.width="100%", fig.align="center"}
#| echo: false
#| output: true

include_graphics("Images/Figure3_SrO_vis.png")

```

This image can be used to broadly see the range of values for the strontium ratio and the range of values for oxygen for each animal and per period. Thus, our visualization replication has four objectives:

-   Replicate the Sr87/Sr86 graph

-   Assign different colors to represent each species

-   Assign different symbols to represent each time period

-   Label certain specimens with its specific number

Then the data set will first be filtered to remove rows with `NA` for either of the two numerical columns that are being graphed. Then I will create the plot using the package `ggplot2`.

### Step 1: Filter the data to remove `NA` values from either numerical column

For this step, I am going to name the filtered tibble `f_vis1` to represent the fauna data filtered for the visualization analysis. For this step, I am using the `filter` function. The code chunk will show you the new tibble without the `NA` values. I am also going to use `mutate()` and `factor()` to specify the order and levels of the category for names. The table showing the new tibble was created using the `{kableExtra}` package and the code was hidden using the `#| echo: false`.

```{r}
f_vis1 <- f %>%
  filter(!is.na(Sr87_Sr86)) %>%
  filter(!is.na(O18))
  
```

Now, the new tibble only includes 56 rows, all of which have values for both O18 and Sr87_Sr86:

```{r}
#| echo: false
f_vis1 %>%
  mutate(RowNumber = row_number()) %>%
  select(RowNumber, everything(), -Comments) %>%
  kable() %>%
  kable_styling() %>%
  kableExtra::scroll_box(width = "100%", height = "600px")
```

### Step 2: Creating the plot

This objective was achieved using the package `{ggplot2}`. The plot will be named as `f_plot1` and saved as an image (.png) in the Images folder on the Github repository.

```{r}
taxa_order <- c("Dog", "Large Feline", "Margay", "Paca", "Agouti", "Opossum", "Deer", "Peccary", "Tapir")
time_order <- c("EMP", "LMP", "LP.TP", "EC", "LC", "TC")

f_plot1 <- ggplot(f_vis1, aes(
  x = Sr87_Sr86,
  y = O18,
  color = ComName,
  shape = TimePeriod
)) +
  geom_point(size = 3) +
  labs(
    x = "87Sr/86Sr",
    y = "18O (‚Ä∞, vs VPDB",
    color = "Taxa",
    Shape = "Period"
  ) +
  scale_color_manual(
    values = c("Agouti" = "darkgreen", "Deer" = "red", "Dog" = "blue", "Large Feline" = "yellow",
               "Margay" = "gold", "Opossum" = "grey", "Paca" = "bisque", "Peccary" = "green", "Tapir" = "indianred4"),
    breaks = taxa_order  # Ensures order matches the image
  ) +
  scale_shape_manual(
    values = c("EC" = "diamond", "EMP" = "asterisk", "LC" = "triangle", "LMP" = "circle", "LP.TP" = "square", "TC" = "triangle down filled"),
    breaks = time_order
  ) +
  theme_bw() +
  theme(legend.position = "right",
        legend.text = element_text(size = 15),
        legend.title = element_text(size = 15))

print(f_plot1)
```

### Step 3: Saving the image:

This step only served to save the image on the Images directory.

```{r}
ggsave(
  "Images/my_vis.png", 
  plot = f_plot1,
  width = 8, 
  height = 6, 
  dpi = 300
  )
```

### Conclusions:

```{r, out.width="100%", fig.align="center", echo=FALSE}
O_vis <- rasterGrob(png::readPNG("Images/Figure3_SrO_vis.png"))
my_vis <- rasterGrob(png::readPNG("Images/my_vis.png"))

grid.arrange(O_vis, my_vis, ncol = 2, top = "Original on the left and reproduction on the right")
```

These two images show the original version of the graph and my reproduction. Both images look quite similar, however there are some key differences. Unlike the first image, my reproduction does not label any specific individuals. In addition, I did not change the titles to match the original graph. Despite that, the reproduction does show the same (or very similar) shapes and colors to represent each animal species and each time period. To do this, I looked at the ggplot [cheatsheet](https://rstudio.github.io/cheatsheets/html/data-visualization.html#themes) on the posit website. I also looked at a list of ggplot [colors](https://sape.inf.usi.ch/quick-reference/ggplot2/colour) and [shapes](https://ggplot2.tidyverse.org/index.html). However, I was not able to get the symbol for TC to fill. Therefore, only the outline of the shape is colored according to taxa.

## Analysis Two: Descriptive Statistics

The analysis that is being replicated here is the descriptive statistics shown in Table 3 of the article. This table is found on page 7 of the .pdf document.

To start, this is the original image:

```{r, out.width="100%", fig.align="center"}
#| echo: false
#| output: true

include_graphics("Images/Table3_DescStats.png")
```

This table shows the mean, standard deviation, and range for each of the three isotopes that were measured. However, these values are calculated separately for dogs and deer in each time period. In addition, the Late Classic and the Terminal Classic periods were combined on this table. Thus, this analysis has the following objectives:

-   Combine LC and TC into one period

-   Filter the data to include only deer and dogs

-   Group the data by species and by time period

-   Get the code to remove `NA` values before each operation

-   Calculate the mean, standard deviation, and range for each of the isotopes for all the grouped data (i.e. Dogs during the LC)

-   Filter the results for species and time period combinations that have no data

-   Create a final table with the results.

-   If possible, arrange table so that the range of each isotope is shown at "\<min\> to \<max\>"

This analysis will be done using the packages `dplyr` and `tidyr`.

### Step 1: The analysis

For this step, I am creating a new tibble names `Desc.Stats` with the relevant statistics. To create this table, first I combined the LC and TC time periods with the `mutate()` function. The next two steps used `filter()` and `group_by()` functions to make sure that the descriptive statistics were only calculated for dogs and deer during each time period. Lastly, I calculated the actual statistics for each isotope using `summarise()` and the specific descriptive statistics formulas (mean, standard deviation, and range).

```{r}
species <- c("Dog", "Deer")

f_desc1 <- f %>%
  mutate(TimePeriod = case_when(
    TimePeriod %in% c("LC", "TC") ~ "LC.TC",
    TRUE ~ as.character(TimePeriod)
  )) %>%
  filter(ComName %in% species) %>%
  group_by(ComName, TimePeriod) %>%
  summarise(
    C13_Mean = mean(C13, na.rm = TRUE),
    C13_SD = sd(C13, na.rm = TRUE),
    C13_Range = paste(min(C13, na.rm = TRUE), "to", max(C13, na.rm = TRUE)),
    
    O18_Mean = mean(O18, na.rm = TRUE),
    O18_SD = sd(O18, na.rm = TRUE),
    O18_Range = paste(min(O18, na.rm = TRUE), "to", max(O18, na.rm = TRUE)),
    
    Sr_Mean = mean(Sr87_Sr86, na.rm = TRUE),
    Sr_SD = sd(Sr87_Sr86, na.rm = TRUE),
    Sr_Range = paste(min(Sr87_Sr86, na.rm = TRUE), "to", max(Sr87_Sr86, na.rm = TRUE)),
    .groups = "drop"
  ) 


```

The resulting table from this analysis contains the same statistics from the original data. However, it looks different:

```{r}
#| echo: false
f_desc1 %>%
  kable() %>%
  kable_styling() %>%
  kableExtra::scroll_box(width = "100%", height = "600px")
```

### Step 2: Organizing the table

This step is purely to re-organize the results from above to more closely match the original table from the article. For this, I will use the `select()`, `mutate()`, and `arrange` functions. The first function will help us reorganize the columns so that they appear in the same order as the original table. The second will be used to round only the values that are rounded in the original table. And lastly, the function called arrange will allow us to arrange the rows in the same order as the original table. I also created a new tibble, `N_Ind`, to count the number of individuals that were used from the original data table to calculate the descriptive statistics. This was also added to each row in the ComName column.

```{r}
N_Ind <- f %>%
  mutate(TimePeriod = case_when(
    TimePeriod %in% c("LC", "TC") ~ "LC.TC",
    TRUE ~ as.character(TimePeriod)
  )) %>%
  filter(ComName %in% species) %>%
  group_by(ComName, TimePeriod) %>%
  summarise(Individuals = n(), .groups = "drop")

f_desc2 <- f_desc1 %>%
  mutate(
    C13_Mean = round(C13_Mean, 1),
    C13_SD = round(C13_SD, 1),
    O18_Mean = round(O18_Mean, 1),
    O18_SD = round(O18_SD, 1),
    Sr_Mean = round(Sr_Mean, 5),
    Sr_SD = sprintf("%.2e", Sr_SD)
  ) %>%
  
  mutate(
    TimePeriod = factor(TimePeriod, levels = c("EMP", "LMP", "LP.TP", "EC", "LC.TC")),
    Animal = paste(ComName, "(", N_Ind$Individuals, ")", sep = ""),
    ComNameFactor = factor(ComName, levels = c("Dog", "Deer"))
  ) %>%
  
  arrange(TimePeriod, ComNameFactor) %>%

  select(
    TimePeriod, Animal, C13_Mean, C13_SD, C13_Range, O18_Mean, O18_SD, O18_Range, Sr_Mean, Sr_SD, Sr_Range
  )
  
  
```

Once this is accomplished, the new table should ressemble the original data more closely. However, I must note that I did not modify the aesthetics of the reproduction to look the same as the original data. The new table is only modified to round the numbers and organized to look like the original table.

```{r}
#| echo: false
f_desc2 %>%
  kable() %>%
  kable_styling() %>%
  kableExtra::scroll_box(width = "100%", height = "600px")
```

### Step 3: Saving the tibble as an image

In order to compare the result from this analysis to the original descriptive analysis, I want to save the tibble as an image I can embed later to this document. To do this, I will use the package `{kableExtra}` and `{webshot}`.

```{r}
f_desc2 %>%
  kable() %>%
  kable_styling(font_size = 15) %>%
  kable_classic() %>%
  add_header_above(c(" " = 2, "Carbon" = 3, "Oxygen" = 3, "Strontium"= 3)) %>%
  save_kable("Images/my_desc.html")

webshot("Images/my_desc.html", 
        file = "Images/my_desc.png",
        selector = "table")
```

### Conclusions:

```{r, out.width="100%", fig.align="center", echo=FALSE}
O_desc <- rasterGrob(png::readPNG("Images/Table3_DescStats.png"))
my_desc <- rasterGrob(png::readPNG("Images/my_desc.png"))

grid.arrange(O_desc, my_desc, nrow = 2, top = "Original ontop and reproduction on the bottom")
```

In order to use `{kableExtra}` I looked at a knitr::kableExtra [cheat sheet](https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html#Overview) on cran, this allowed me to add a grouped row heading to the table. Although the results of the reproduction are an exact match in some instances, it is not always the case. The count of the sample is wrong for LMP Dog, LP.TP Dog, and LC.TC Dog. In each of these cases, my reproduction counted one more row of data than the original article did. This shows that the authors cleaned up the data before running the analysis. However, because they did not specify which values were removed from the original data, I was not able to edit the analysis to count the same number of individuals from the original paper. Despite this, the only values that were affected across most isotopes were the values for LP.TP Dog. In the other instances were the number of individuals in the sample varied from the article, only one of the values was affected.

## Analysis Three: Inferential Statistics

On page 8 of the .pdf documents, the authors refer to a comparison of human and dog diets. However, the authors did not publish a table with the results. They only published one result within the document, the article states that during the Late Middle Preclassic (LMP) the, "difference between dog and human diets is still not statistically different (p = 0.13 using Student's t-test)." In my analysis I will compare C13 values for dogs and humans during this time period in order to get the same p-value the original authors got. In addition to that, I will be comparing all time periods to confirm the authors discussion of diet differences between dogs and humans across time periods.

To conduct this analysis I will do the following:

-   Extract time period and carbon 13 data for all dogs in the fauna data and for all individuals from the human data.

-   Combine the time periods LC and TC as a new value.

-   Combine this data in a new tibble called "dh" with the following columns: ComName, TimePeriod, and C13

-    Run Student's t-tests to compare C13 values of dogs and humans across time periods

-   Round the t-test results to 2 decimal points as shown in the article

    ### Step 1: Create and clean new tibble

    To create the new tibble I used the functions `filter()` and `select()` to filter the fauna data for dogs only and select the columns TimePeriod, ComName, and C13. Then I used the function `bind_rows()` to add TimePeriod and C13 from the human data to the new tibble. Then, I used `mutate()` to combine LC and TC so that rows with either value in TimePeriod now contain the value LC.TC. Lastly, I will filter the data to remove any rows that show `NA` in the C13 column.

```{r}
dh_infer1 <- f %>%
  filter(ComName == "Dog") %>%
  select(TimePeriod, ComName, C13) %>%
  bind_rows(
    h %>%
      select(TimePeriod, C13) %>%
      mutate(ComName = "Human")
  ) %>%
  mutate(TimePeriod = case_when(
    TimePeriod %in% c("LC", "TC") ~ "LC.TC",
    TRUE ~ as.character(TimePeriod)
  )) %>%
  filter(!is.na(C13))
```

Once cleaned for this analysis, the table should look like this:

```{r}
#| echo: false
dh_infer1 %>%
  kable() %>%
  kable_styling() %>%
  kableExtra::scroll_box(width = "100%", height = "600px")
```

### Step 2: Comparison using Student's t-test

This step will contain various components. First, I will group the data by time period. Then I will filter to keep only data from time periods that have values for both dogs and humans by using `group_by()` to group the data by time period and filter the data to keep only the groups that have values for both dogs and humans. Then I will use the `do()` function to make sure the rest of the code runs for each time period. Within the `do()` function, I will use three different functions: `lm()` from the `{stats}` package to run the models for all time periods, `summary()` to summarize the models, and `tibble()` to create a tibble with the results.

```{r}
dh_infer2 <- dh_infer1 %>%
  group_by(TimePeriod) %>%
  filter(n_distinct(ComName) == 2) %>%
  do({
    m <- lm(C13 ~ ComName, data = .)
    m_sum <- summary(m)
    tibble(
      TimePeriod = unique(.$TimePeriod),
      t_statistic = m_sum$coefficients [2, "t value"],
      p_value = m_sum$coefficients [2, "Pr(>|t|)"],
      estimate_diff = m_sum$coefficients[2, "Estimate"],
      Dog_mean = mean(.$C13[.$ComName == "Dog"]),
      Human_mean = mean(.$C13[.$ComName == "Human"])
    )
  }) %>%
  ungroup() %>%
  mutate(
    p_value = round(p_value, 2)
  )
```

### Step 3: Saving the tibble as an image

```{r}
dh_infer2 %>%
  kable() %>%
  kable_styling() %>%
  save_kable("Images/my_infer.html")

webshot("Images/my_infer.html", "Images/my_infer.png", selector = "table")
```

### Conclusions:

Although there is no image from this analysis in the original article, the article does state that the p value for the comparison between dogs and humans during the LMP is 0.13. My reproduction analyzed the Student's t-test and p-values for all time periods:

```{r, out.width="100%", fig.align="center", echo=FALSE}
my_infer <- rasterGrob(png::readPNG("Images/my_infer.png"))

grid.arrange(my_infer, 
             top = textGrob(
               "Reproduction of the Student's t-test and p-values", 
               vjust = 10
               ),
             padding = unit(0, "line"))

```

In this table, the p-value for the comparison between the carbon isotope values for dogs and humans during the LMP is 0.13, which is an exact match to the author's estimate in the article. In addition, all the estimates for the p-values show that the comparisons are not statistically significant. While the authors do not specify the p-values for the comparisons of other time lines, they do state that non of the comparisons were statistically significant. The results of my reproduction support this argument.
